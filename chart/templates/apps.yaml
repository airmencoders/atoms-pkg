{{ if .Values.apps.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: aoa
    namespace: argocd
    finalizers:
        - resources-finalizer.argocd.argoproj.io
spec:
    project: default
    source:
        repoURL: https://sync.git.mil/maf/infrastructure/nucleus/argo-apps.git
        path: argocd/dev
        targetRevision: main
        directory:
            recurse: true
            jsonnet: {}
    destination:
        server: https://kubernetes.default.svc
        namespace: argocd
    syncPolicy:
        automated:
            prune: true
            selfHeal: true
{{- end }}
---
{{ if .Values.apps.enabled -}}
# 1. Query your secret for "existance" and return in the $secret variable
{{- $secret := (lookup "v1" "Secret" .Release.Namespace "git-mil-aoa-creds") -}}

# 2. If the secret exists, write it back out (it'll be Base64 encoded so used the "data" key)
{{ if $secret -}}
apiVersion: v1
kind: Secret
metadata:
  name: git-mil-aoa-creds
  namespace: argocd
  labels:
        argocd.argoproj.io/secret-type: repository
type: Opaque


data:
  url: {{ $secret.data.url }}
  password: {{ $secret.data.password }}
  username: {{ $secret.data.username }}


{{ end }}
{{ end }}
---
{{ if .Values.apps.enabled -}}
# 1. Query your secret for "existance" and return in the $secret variable
{{- $secret2 := (lookup "v1" "Secret" .Release.Namespace "git-mil-nr-creds") -}}

# 2. If the secret exists, write it back out (it'll be Base64 encoded so used the "data" key)
{{ if $secret2 -}}
apiVersion: v1
kind: Secret
metadata:
  name: git-mil-nr-creds
  namespace: argocd
  labels:
        argocd.argoproj.io/secret-type: repository
type: Opaque


data:
  url: {{ $secret2.data.url }}
  password: {{ $secret2.data.password }}
  username: {{ $secret2.data.username }}


{{ end }}
{{ end }}